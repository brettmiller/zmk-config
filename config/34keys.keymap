/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "34keys.h"


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
      #include "combos.dtsi"
  };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
        

        
    };

    keymap {
       compatible = "zmk,keymap";
                
       default_layer {
         label = "BASE"
         bindings = <
           &kp Q      &kp W      &kp E      &kp R        &kp T          &kp Y   &kp U      &kp I      &kp O      &kp P 
           &hm LCTL A &hm LALT S &hm LGUI D &hm LSFT F   &kp G          &kp H   &hm RSFT J &hm RGUI K &hm RALT L &hm RCLT QUOT
           &kp Z      &kp X      &kp C      &kp V        &kp B          &kp N   &kp M      &kp CMMA   &kp DOT    &mt LSFT RET
                                            &mt LGUI ESC &lt SYM SPC    &lt NUM SPC &mt RGUI ENTER 
         >;
       };
    
       num_layer {
         // numbers, navigation, & "math" symbol
         label = "NUM"
         bindings = <
           &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5      &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 
           &trans    &kp LALT  &kp DEL   &kp PLUS  &kp MINUS      &kp LEFT  &kp DOWN  &kp UP    &kp RGHT  &kp BSPC
           &trans    &kp EQL   &kp DOT   &kp ASTR  &kp SLSH       &kp HOME  &kp PG_DN &kp PG_UP &kp END   &kp ESC
                               &lt 3 ESC &sk LS(LCTRL)            &trans    &trans
         >;
       }; 

       symbols_layer {
         label = "SYM"
         bindings = <
           &kp EXCL  &kp AT    &kp LBRC &kp RCBR &kp PIPE   &kp GRAVE &kp UNDER &kp ASTRK &kp PIPE &kp TILDE
           &kp HASH  &kp DLLR  &kp LPAR &kp RPAR &kp DQT    &kp PLUS  &kp MINUS &kp FSLH  &kp BSLH &kp SQT
           &kp PRCNT &kp CARET &kp LBKT &kp RBKT &kp SQT    &kp EQL   &kp AMPR  &kp LT    &kp GT   &kp DQT
                                           &trans &trans    &kp EQL   &mt RGUI SEMI
         >;
       };  
 
       adjust_layer {
         bindings = <
           &kp F1      &kp F2     &kp F3       &kp F4       &kp F5       &kp F6     &kp F7       &kp F8       &kp F9     &kp F10 
           &trans      &none      &kp C_BRI_DN &kp C_BRI_UP &none        &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &trans 
           &bootloader &bt BT_CLR &bt BT_NXT   &bt BT_PRV   &none        &trans     &kp PG_DN    &kp K_VOL_DN &trans     &trans   
                                               &trans       &trans       &kp K_MUTE &kp C_PLAY_PAUSE
         >;
       };  
        
    };
};
